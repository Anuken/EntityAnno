plugins{
    id 'java'
    id 'maven-publish'
}

allprojects{
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'com.github.GlennFolker'
    version = mindustryVersion

    ext{
        compilerVersion = JavaVersion.current().ordinal() - JavaVersion.VERSION_19.ordinal() + 19

        arc = {String module ->
            return "com.github.Anuken.Arc$module:$arcVersion"
        }

        mindustry = {String module ->
            return "com.github.Anuken.MindustryJitpack$module:$mindustryVersion"
        }
    }

    repositories{
        google()
        mavenCentral()
        maven{url 'https://oss.sonatype.org/content/repositories/snapshots/'}
        maven{url 'https://oss.sonatype.org/content/repositories/releases/'}
        maven{url 'https://jitpack.io'}
    }
}

configure([project(':downgrader'), project(':entity')]){
    tasks.register('sourcesJar', Jar){
        dependsOn classes

        archiveClassifier = 'sources'
        from sourceSets.main.allJava
    }

    artifacts{
        archives sourcesJar
    }

    java{
        withJavadocJar()
        withSourcesJar()
        toolchain{
            languageVersion = JavaLanguageVersion.of(compilerVersion)
        }
    }

    publishing{
        publications{
            maven(MavenPublication){
                from components.java
            }
        }
    }

    tasks.withType(Javadoc).configureEach{
        options{
            encoding = 'UTF-8'

            addStringOption('Xdoclint:none', '-quiet')
            addMultilineStringsOption('-add-exports').setValue((project['org.gradle.jvmargs'] as String)
                .split('\\s+')
                .findAll{it.startsWith('--add-opens')}
                .collect{it.substring('--add-opens='.length())}
            )
        }
    }

    sourceCompatibility = compilerVersion
    tasks.withType(JavaCompile).configureEach{
        options.incremental = true
        options.encoding = 'UTF-8'

        sourceCompatibility = compilerVersion
        targetCompatibility = 8

        doFirst{
            sourceCompatibility = 8
        }
    }
}
